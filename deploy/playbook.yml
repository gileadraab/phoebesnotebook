- hosts: 5.161.90.22
  vars:
    app_name: phoebesnotebook 
    git_repo: "https://github.com/gileadraab/phoebesnotebook.git"
    git_branch: "main"
    remote_project_path: /home/phoebesnotebook
    venv_path: "{{remote_project_path}}/.venv"
    service_file: phoebesnotebook.service
    poetry_path: poetry_path.sh
    pyenv_dependencies: build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev curl libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
    nginx_config: nginx.conf
    server_name: phoebesnotebook.com
    
  user: root
  tasks:
    - name: Update and upgrade apt packages
      become: true
      apt:
        upgrade: yes
        update_cache: yes

    - name: Install apt packages
      ansible.builtin.apt:
        name: "{{item}}"
      loop:
        - python3.8-venv
        - nginx

    - name: Install poetry and pyenv
      ansible.builtin.shell: |
        curl https://pyenv.run | bash
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Get repository from git and update locally
      ansible.builtin.git:
        repo: "{{git_repo}}"
        dest: "{{remote_project_path}}"
        version: "{{git_branch}}"
        clone: yes
        update: yes

    - name: Install Pyenv dependencies
      ansible.builtin.shell: 
        apt -y install {{pyenv_dependencies}}

    - name: Install latest python version
      ansible.builtin.shell:
        /root/.pyenv/bin/pyenv install --skip-existing
      args:
        chdir: "{{remote_project_path}}"

    - name: Create virtualenv
      ansible.builtin.shell:
        . /etc/profile.d/pyenv_path.sh && python -m venv {{venv_path}}
      args:
        chdir: "{{remote_project_path}}"

    - name: Activate virtualenv
      ansible.builtin.shell:
        . {{venv_path}}/bin/activate
      args:
        chdir: "{{remote_project_path}}"

    - name: Install specified python requirements in indicated virtualenv
      ansible.builtin.shell:
        /root/.local/bin//poetry install
      args:
        chdir: "{{remote_project_path}}"
    
    - name: Copy service file with owner and permissions to server
      ansible.builtin.template:
        src: "{{service_file}}"
        dest: /etc/systemd/system/
        owner: root
        group: root
        mode: '0777'

    - name: Start gunicorn service
      systemd:
        name: "{{service_file}}"
        state: restarted
        daemon_reload: yes

    - name: Enable gunicorn service
      systemd:
        name: "{{service_file}}"
        enabled: true
   
    - name: Allow required ports in firewall
      community.general.ufw:
        name: "{{item}}"
        rule: allow
      loop:
        - OpenSSH
        - Nginx Full
    
    - name: enable UFW
      community.general.ufw:
        state: reloaded

    - name: Copy server block configuration file to server
      ansible.builtin.template:
        src: "{{nginx_config}}"
        dest: /etc/nginx/sites-available/{{nginx_config}}
        owner: root
        group: root
        mode: '0777'   

    - name: Creating a symlink between sites-available and sites-enabled directories
      ansible.builtin.file:
        src: /etc/nginx/sites-available/{{nginx_config}}
        dest: /etc/nginx/sites-enabled/{{nginx_config}}
        state: link 
    
    - name: Start nginx
      systemd:
        name: nginx
        state: restarted
    

      

    
